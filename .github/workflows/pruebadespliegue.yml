name: pruebadespliegue_workflow

# se ejecutará al hacer push en la rama main
on:
  push:
    branches:
      - main

jobs:
  # ejecución del Linter_job para comprobar la sintaxis del código
  Linter_job:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Establecer versión de Node
      - name: Setup node version
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      # Step 3: Instalación de dependencias
      - name: Install dependencies
        run: npm install

      # Step 4: Linter execution
      - name: Linter execution
        run: npm run lint
  Cypress_job:
    runs-on: ubuntu-24.04
    needs: Linter_job

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Establecer versión de Node
      - name: Setup node version
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      # Step 3: Instalar dependencias
      - name: Install dependencies
        run: npm install

      # Step 4: Cypress run
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          build: npm run build
          start: npm start
          config-file: cypress.json
        continue-on-error: true
        id: cypress

      # Step 5: Creación del artefacto con el resultado del test
      - name: Crear artefacto result.txt
        run: mkdir -p artifacts && echo ${{ steps.cypress.outcome }} > artifacts/result.txt

      # Step 6: Upload del artefacto
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: resultado-test
          path: artifacts/result.txt
  Add_badge_job:
    runs-on: ubuntu-latest
    needs: Cypress_job

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Obtener artefacto del job anterior
      - name: Descargar artefacto result.txt
        uses: actions/download-artifact@v4
        with:
          name: resultado-test

      # Step 3: Test descarga del artefacto
      - name: Test artifact download
        run: ls -R

      # Step 4: Instalar dependencias
      - name: Install dependencies
        run: cd ./.github/actions/badges && npm install

      # Step 5: Leer el contenido del artefacto
      - name: Leer artefacto
        id: resultado_artefacto
        run: echo "::set-output name=resultado::$resultado"
      # Step 6: Generar output
      - name: Generar output
        uses: ./.github/actions/badges
        with:
          resultado: ${{ steps.resultado_artefacto.outputs.resultado }}

      # Step 7: Commit and Push Changes
      - name: Commit and Push Changes
        uses: EndBug/add-and-commit@v9
        with:
          add: "."
          author_name: "Santi"
          message: "Actualizado el README file"
          push: true
          token: ${{ secrets.TOKEN }}
  Deploy_job:
    runs-on: ubuntu-latest
    needs: Add_badge_job

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Crear build
      - name: install & build
        run: npm install && npm run build

      # Step 3: Upload artefacto con la build del blog
      - name: Upload artefacto
        uses: actions/upload-artifact@v3
        with:
          name: nextjs-blog
          path: .next/

      # Step 4: Download artefacto con la build del blog
      - name: Get Artifact
        uses: actions/download-artifact@v3
        with:
          name: nextjs-blog

      # Step 5: Despliegue en Vercel
      - name: Deploy Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          working-directory: ./sub-directory
  Send_message:
    runs-on: ubuntu-latest
    needs: Cypress_job
    steps:
      # Step 1: Checkout Code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Instalar dependencias
      - name: Instalar dependencias
        run: cd ./.github/actions/telegram && npm install

      # Step 3: Enviar mensaje de Telegram
      - name: Enviar Telegram
        uses: ./.github/actions/telegram
        with:
          telegram_token: ${{ secrets.TELEGRAM_TOKEN}}
          telegram_id_user: ${{ secrets.TELEGRAM_ID_TOKEN }}
          resultado_cypress: ${{ needs.Cypress_job.outputs.cypress_result }}
